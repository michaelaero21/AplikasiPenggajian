<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\Models\SlipGaji; 
class LaporanController extends Controller
{
   public function index(Request $request)
{
    $start = $request->start_date ? \Carbon\Carbon::parse($request->start_date) : null;
    $end = $request->end_date ? \Carbon\Carbon::parse($request->end_date) : null;

    // Validasi: Tanggal awal harus lebih kecil atau sama dengan tanggal akhir
    if ($start && $end && $start->gt($end)) {
        return redirect()->back()->withInput()->with('error', 'Tanggal awal tidak boleh lebih besar dari tanggal akhir.');
    }

    $kategori_gaji = null;

    if ($start && $end) {
        $selisih_hari = $start->diffInDays($end);

        if ($selisih_hari <= 21) {
            $kategori_gaji = 'mingguan';
        } else {
            $kategori_gaji = 'bulanan';
        }
    }

    $slips = SlipGaji::with('karyawan')
        ->when($request->search, function ($query, $search) {
            $query->whereHas('karyawan', function ($q) use ($search) {
                $q->where('nama', 'like', '%' . $search . '%');
            });
        })
        ->when($start && $end, function ($query) use ($start, $end, $kategori_gaji) {
            $query->where(function ($q) use ($start, $end, $kategori_gaji) {
                if ($kategori_gaji === 'mingguan') {
                    // Ambil semua slip mingguan di rentang tanggal
                    $q->whereBetween('periode', [$start->toDateString(), $end->toDateString()]);
                } elseif ($kategori_gaji === 'bulanan') {
                    // Ambil slip bulanan di rentang bulan
                    $q->orWhere(function ($qq) use ($start, $end) {
                        $qq->whereRaw("LENGTH(periode) = 7") // format Y-m
                           ->whereBetween('periode', [$start->format('Y-m'), $end->format('Y-m')]);
                    });

                    // Ambil slip mingguan minggu terakhir (dalam 7 hari terakhir dari $end)
                    $lastWeekStart = $end->copy()->subDays(6);
                    $q->orWhere(function ($qq) use ($lastWeekStart, $end) {
                        $qq->whereRaw("LENGTH(periode) > 7") // mingguan biasanya lebih panjang dari 7
                           ->whereBetween('periode', [$lastWeekStart->toDateString(), $end->toDateString()]);
                    });
                }
            });
        })
        ->orderBy('created_at', 'desc')
        ->get();

    // Kelompokkan berdasarkan karyawan_id
    $grouped = $slips->groupBy('karyawan_id')->map(function ($slips) {
        return [
            'karyawan' => $slips->first()->karyawan,
            'slips' => $slips,
            'total_gaji_pokok' => $slips->sum('gaji_pokok'),
            'total_uang_makan' => $slips->sum('uang_makan'),
            'total_transport' => $slips->sum('uang_transport'),
            'total_lembur' => $slips->sum('lembur'),
            'total_thr' => $slips->sum('thr'),
            'total_tunjangan_sewa' => $slips->sum('tunjangan_sewa'),
            'total_tunjangan_pulsa' => $slips->sum('tunjangan_pulsa'),
            'total_insentif' => $slips->sum('insentif'),
            'total_bpjs' => $slips->sum('asuransi'),
            'total_dibayar' => $slips->sum('total_dibayar'),
        ];
    })->sortBy(fn($item) => $item['karyawan']->id);

    $total_semua = $slips->sum('total_dibayar');

    return view('laporan.index', [
        'data' => $grouped,
        'total' => $total_semua,
        'kategori' => $kategori_gaji, // kirim kategori yang terdeteksi otomatis
        'start' => $request->start_date,
        'end' => $request->end_date,
        'search' => $request->search,
    ]);
}

}